
#to find max arithmatic progression 
#https://leetcode.com/problems/longest-arithmetic-subsequence/submissions/

'''
Input: A = [3,6,9,12]
Output: 4
Explanation: 
The whole array is an arithmetic sequence with steps of length = 3.
Example 2:

Input: A = [9,4,7,2,10]
Output: 3
Explanation: 
The longest arithmetic subsequence is [4,7,10].
Example 3:

Input: A = [20,1,15,3,10,5,8]
Output: 4
Explanation: 
The longest arithmetic subsequence is [20,15,10,5].

'''

class Solution:
    def longestArithSeqLength(self, A: List[int]) -> int:

        d = {}
        for i in range(len(A)):
            for j in range(i + 1, len(A)):
                d[j, A[j] - A[i]] = d.get((i, A[j] - A[i]), 1) + 1
        return max(d.values())
        
        
        
#to find max arithmatic progression given value d

def maxlenAP(a, n, d):

    m = dict()
    maxt = 1

    for i in range(n):
        if (a[i] - i * d) in m:
            m[a[i] - i * d] += 1
        else:
            m[a[i] - i * d] = 1

    for it in m:
        if m[it] > maxt:
            # calculating the length of longest AP.
            maxt = m[it]

    return maxt

print(maxlenAP([1, 4, 2, 5, 20, 11, 56, 100, 20, 23], 10, 3 )) #5


#arithmatic sequence when 2 lists a and b are given

import bisect
import copy


def longestArithSeqLength(A, B):

    dic = {}
    dic2 = {}
    originalA = len(A)
    ogA = copy.deepcopy(A)
    for b in B:
        bisect.insort(A, b)

    for i in range(len(A)):
        for j in range(len(A[:i])):

            diff = A[i] - A[j]

            addCount = 1 if A[i] in ogA else 0

            if (j, diff) in dic:
                dic[i, diff] = dic[j, diff] + 1
                dic2[i, diff] = dic2[j, diff] + addCount

            else:
                addCount += 1 if A[j] in ogA else 0
                dic[i, diff] = 2
                dic2[i, diff] = addCount

    result = 0
    for key, value in dic.items():
        if dic2[key] == originalA:
            result = max(result, dic[key])

    return (-1 if result < originalA else result)


a = [0, 4, 8, 16]
b = [0, 2, 6, 12, 14, 20]
print(longestArithSeqLength(a, b)) #6
